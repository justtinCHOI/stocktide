import{b as C,e as b,f as g,s as t,h as f,i as m,k as p,B as S,n as L}from"./index-BYRxBMX6.js";import{u as w}from"./vendor-BJTqHD0O.js";const I=()=>{const c=C(),u=b(s=>s.cashSlice),h=w();return{cashState:u,doUpdateCashId:s=>{c(L(s))},doCreateCash:async s=>(c(g(s)),new Promise((a,r)=>{const o=t.subscribe(()=>{const e=t.getState().cashSlice;e.loading||(o(),e.error?r(e.error):a(e.cashList[e.cashList.length-1]))})})),doGetCashList:async s=>(c(f(s)),new Promise((a,r)=>{const o=t.subscribe(()=>{const e=t.getState().cashSlice;e.loading||(o(),e.error?r(e.error):a(e.cashList))})})),doDeleteCash:async s=>(c(m(s)),new Promise((a,r)=>{const o=t.subscribe(()=>{const e=t.getState().cashSlice;e.loading||(o(),e.error?r(e.error):a(s))})})),doUpdateCash:async(s,a,r)=>(c(p({cashId:s,money:a,dollar:r})),new Promise((o,e)=>{const d=t.subscribe(()=>{const n=t.getState().cashSlice;if(!n.loading)if(d(),n.error)S.error("계좌 업데이트에 실패했습니다"),e(n.error);else{const i=n.cashList.find(l=>l.cashId===s);i?o(i):e(new Error("Updated cash not found"))}})})),moveToManage:()=>{h({pathname:"/my/account/manage"},{replace:!0})}}};export{I as u};
//# sourceMappingURL=useCustomCash-B71rFefH.js.map
