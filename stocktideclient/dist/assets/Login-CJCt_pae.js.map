{"version":3,"file":"Login-CJCt_pae.js","sources":["../../src/assets/images/KakaoLogo.svg","../../src/components/member/kakao/KakaoLoginComponent.tsx","../../src/components/member/login/LoginComponent.tsx","../../src/pages/member/login/Login.tsx"],"sourcesContent":["export default \"__VITE_ASSET__Cg8spSiy__\"","import {getKakaoLoginLink} from \"@api/kakaoApi\";\r\nimport kakaoLogo from \"@assets/images/KakaoLogo.svg\";\r\nimport styled from \"styled-components\";\r\nimport { FC } from 'react';\r\nimport { StyledLink } from '@assets/css/common';\r\n\r\ninterface KakaoLoginComponentProps{\r\n  buttonText: string;\r\n}\r\n\r\nconst KakaoLoginComponent: FC<KakaoLoginComponentProps> = ({buttonText}) => {\r\n    const link = getKakaoLoginLink()\r\n\r\n    return (\r\n        <StyledLink to={link}>\r\n            <KakaoButton>\r\n                <LogoImage src={kakaoLogo} alt=\"Kakao Logo\"/>\r\n                {buttonText}\r\n            </KakaoButton>\r\n        </StyledLink>\r\n    )\r\n}\r\n\r\nexport default KakaoLoginComponent;\r\n\r\nconst KakaoButton = styled.div`\r\n    margin: 10px auto;\r\n    padding: 10px 20px;\r\n    background-color: #FFFFFF;\r\n    border: 1px solid lightgray;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    width: 300px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &:hover {\r\n        background-color: #f2f2f2; // 호버 시 밝은 회색 배경 적용\r\n    }\r\n`;\r\n\r\nconst LogoImage = styled.img`\r\n    margin-right: 30px;\r\n    width: 60px;\r\n    height: auto;\r\n`;\r\n","import React, { FC, useState } from 'react';\r\nimport styled from \"styled-components\";\r\nimport useCustomMember from \"@hooks/useCustomMember.ts\";\r\nimport KakaoLoginComponent from '@components/member/kakao/KakaoLoginComponent';\r\nimport { LoginState } from '@typings/member';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst initState: LoginState = {\r\n    email: '',\r\n    password: ''\r\n};\r\n\r\nconst LoginComponent: FC = () => {\r\n    const { t } = useTranslation();\r\n    const [loginParam, setLoginParam] = useState<LoginState>({ ...initState });\r\n    const { doLogin } = useCustomMember();\r\n\r\n    const handleChange = (e:  React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setLoginParam(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleClickLogin = () => {\r\n        if (!loginParam.email) {\r\n            toast.warning(\"이메일을 입력해주세요\");\r\n            return;\r\n        }\r\n        if (!loginParam.password) {\r\n            toast.warning(\"비밀번호를 입력해주세요\");\r\n            return;\r\n        }\r\n\r\n        doLogin(loginParam).then();\r\n    };\r\n\r\n    const handleClickSignin = () => {\r\n        //todo\r\n    };\r\n\r\n    return (\r\n      <Container>\r\n          <InputContainer>\r\n              <Label>{t('login.email')}</Label>\r\n              <Input\r\n                name=\"email\"\r\n                type=\"text\"\r\n                value={loginParam.email}\r\n                onChange={handleChange}\r\n              />\r\n          </InputContainer>\r\n          <InputContainer>\r\n              <Label>{t('login.password')}</Label>\r\n              <Input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={loginParam.password}\r\n                onChange={handleChange}\r\n              />\r\n          </InputContainer>\r\n          <ButtonContainer>\r\n              <Button onClick={handleClickLogin}>\r\n                  {t('login.loginButton')}\r\n              </Button>\r\n              <Button onClick={handleClickSignin}>\r\n                  {t('login.signupButton')}\r\n              </Button>\r\n          </ButtonContainer>\r\n          <KakaoLoginComponent buttonText={t('login.kakaoLogin')} />\r\n      </Container>\r\n    );\r\n};\r\n\r\nexport default LoginComponent;\r\n\r\n// Styled Components\r\nconst Container = styled.div`\r\n    margin-top: 6rem;\r\n  .flex {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  margin-bottom: 1rem;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n`;\r\n\r\nconst Label = styled.div`\r\n  width: 100%;\r\n  padding: 1rem;\r\n  text-align: left;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border-radius: 0.25rem;\r\n  border: 1px solid #999;\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin-bottom: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst Button = styled.div`\r\n    padding: 0.8rem;\r\n    width: 8rem;\r\n    margin: 0 1rem;\r\n    background-color: #007bff;\r\n    color: white;\r\n    font-size: 1rem;\r\n    border: none;\r\n    border-radius: 0.25rem;\r\n    cursor: pointer;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: #0056b3;\r\n    }\r\n`;\r\n","import {IncludeInformationDiv, OutletDiv} from \"@assets/css/menu\";\r\nimport LoginComponent from '@components/member/login/LoginComponent';\r\n\r\nconst Login = () => {\r\n  return (\r\n      <IncludeInformationDiv $top={2}>\r\n        <OutletDiv>\r\n            <LoginComponent/>\r\n        </OutletDiv>\r\n      </IncludeInformationDiv>\r\n   );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["kakaoLogo","KakaoLoginComponent","buttonText","link","getKakaoLoginLink","jsx","StyledLink","KakaoButton","LogoImage","styled","initState","LoginComponent","useTranslation","loginParam","setLoginParam","useState","doLogin","useCustomMember","handleChange","e","name","value","prev","handleClickLogin","toast","handleClickSignin","Container","jsxs","InputContainer","Label","Input","ButtonContainer","Button","Login","IncludeInformationDiv","OutletDiv"],"mappings":"8WAAA,MAAeA,EAAA,iCCUTC,EAAoD,CAAC,CAAC,WAAAC,KAAgB,CACxE,MAAMC,EAAOC,EAAkB,EAE/B,OACKC,EAAA,IAAAC,EAAA,CAAW,GAAIH,EACZ,gBAACI,EACG,CAAA,SAAA,CAAAF,EAAA,IAACG,EAAU,CAAA,IAAKR,EAAW,IAAI,aAAY,EAC1CE,CAAA,CAAA,CACL,CACJ,CAAA,CAER,EAIMK,EAAcE,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBrBD,EAAYC,EAAO;AAAA;AAAA;AAAA;AAAA,EClCnBC,EAAwB,CAC1B,MAAO,GACP,SAAU,EACd,EAEMC,EAAqB,IAAM,CACvB,KAAA,CAAE,CAAE,EAAIC,EAAe,EACvB,CAACC,EAAYC,CAAa,EAAIC,EAAAA,SAAqB,CAAE,GAAGL,EAAW,EACnE,CAAE,QAAAM,CAAQ,EAAIC,EAAgB,EAE9BC,EAAgBC,GAA4C,CAC9D,KAAM,CAAE,KAAAC,EAAM,MAAAC,CAAM,EAAIF,EAAE,OAC1BL,EAAuBQ,IAAA,CACnB,GAAGA,EACH,CAACF,CAAI,EAAGC,CAAA,EACV,CACN,EAEME,EAAmB,IAAM,CACvB,GAAA,CAACV,EAAW,MAAO,CACnBW,EAAM,QAAQ,aAAa,EAC3B,MAAA,CAEA,GAAA,CAACX,EAAW,SAAU,CACtBW,EAAM,QAAQ,cAAc,EAC5B,MAAA,CAGIR,EAAAH,CAAU,EAAE,KAAK,CAC7B,EAEMY,EAAoB,IAAM,CAEhC,EAEA,cACGC,EACG,CAAA,SAAA,CAAAC,OAACC,EACG,CAAA,SAAA,CAACvB,EAAA,IAAAwB,EAAA,CAAO,SAAE,EAAA,aAAa,CAAE,CAAA,EACzBxB,EAAA,IAACyB,EAAA,CACC,KAAK,QACL,KAAK,OACL,MAAOjB,EAAW,MAClB,SAAUK,CAAA,CAAA,CACZ,EACJ,SACCU,EACG,CAAA,SAAA,CAACvB,EAAA,IAAAwB,EAAA,CAAO,SAAE,EAAA,gBAAgB,CAAE,CAAA,EAC5BxB,EAAA,IAACyB,EAAA,CACC,KAAK,WACL,KAAK,WACL,MAAOjB,EAAW,SAClB,SAAUK,CAAA,CAAA,CACZ,EACJ,SACCa,EACG,CAAA,SAAA,CAAA1B,MAAC2B,EAAO,CAAA,QAAST,EACZ,SAAA,EAAE,mBAAmB,EAC1B,QACCS,EAAO,CAAA,QAASP,EACZ,SAAA,EAAE,oBAAoB,CAC3B,CAAA,CAAA,EACJ,EACCpB,EAAAA,IAAAJ,EAAA,CAAoB,WAAY,EAAE,kBAAkB,CAAG,CAAA,CAAA,EAC5D,CAEN,EAKMyB,EAAYjB,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQnBmB,EAAiBnB,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOxBoB,EAAQpB,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOfqB,EAAQrB,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQfsB,EAAkBtB,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAOzBuB,EAASvB,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECjHhBwB,EAAQ,IAER5B,EAAAA,IAAC6B,GAAsB,KAAM,EAC3B,eAACC,EACG,CAAA,SAAA9B,EAAAA,IAACM,EAAc,CAAA,CAAA,CAAA,CACnB,CACF,CAAA"}