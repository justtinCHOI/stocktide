{"version":3,"file":"KakaoRedirect-ZNALWC-2.js","sources":["../../src/pages/member/kakao/KakaoRedirect.tsx"],"sourcesContent":["import {useSearchParams} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport useCustomMember from \"@hooks/useCustomMember\";\r\nimport {getAccessToken, getMemberWithAccessToken} from \"@api/kakaoApi\";\r\nimport {IncludeInformationDiv, OutletDiv} from \"@assets/css/menu\";\r\nimport { loginSuccess } from '@slices/memberSlice';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst KakaoRedirect = () => {\r\n    const dispatch = useDispatch();\r\n    const [searchParams] = useSearchParams()\r\n    const authCode = searchParams.get(\"code\") //인증코드\r\n\r\n    const { moveToPath} = useCustomMember()\r\n\r\n    //getKakaoLoginLink : kakaoURL -> 인가코드\r\n    //getAccessToken : 인가코드 -> accessToken\r\n    //getMemberWithAccessToken : accessToken -> info\r\n\r\n    useEffect(() => {\r\n        if(authCode){\r\n            getAccessToken(authCode).then(accessToken => {\r\n                getMemberWithAccessToken(accessToken).then(memberInfo => {\r\n                    dispatch(loginSuccess(memberInfo))\r\n                    if (memberInfo) {\r\n                        if (memberInfo.email) {\r\n                            moveToPath(\"/\");\r\n                            toast.success(\"카카오 로그인 성공!\");\r\n                        } else {\r\n                            toast.info(\"일반회원으로 전환이 필요합니다\");\r\n                            if (confirm(\"일반회원으로 전환하시겠습니까?\")) {\r\n                                moveToPath(\"/my/modify\");\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }, [authCode])\r\n\r\n    return (\r\n        <IncludeInformationDiv $top={2}>\r\n            <OutletDiv>\r\n                <div>Kakao Login Redirect</div>\r\n                <div>{authCode}</div>\r\n            </OutletDiv>\r\n        </IncludeInformationDiv>\r\n    )\r\n}\r\n\r\nexport default KakaoRedirect;\r\n"],"names":["KakaoRedirect","dispatch","useDispatch","searchParams","useSearchParams","authCode","moveToPath","useCustomMember","useEffect","getAccessToken","accessToken","getMemberWithAccessToken","memberInfo","loginSuccess","toast","jsx","IncludeInformationDiv","OutletDiv"],"mappings":"+RASA,MAAMA,EAAgB,IAAM,CACxB,MAAMC,EAAWC,EAAY,EACvB,CAACC,CAAY,EAAIC,EAAgB,EACjCC,EAAWF,EAAa,IAAI,MAAM,EAElC,CAAE,WAAAG,CAAU,EAAIC,EAAgB,EAMtCC,OAAAA,EAAAA,UAAU,IAAM,CACTH,GACgBI,EAAAJ,CAAQ,EAAE,KAAoBK,GAAA,CAChBC,EAAAD,CAAW,EAAE,KAAmBE,GAAA,CAC5CX,EAAAY,EAAaD,CAAU,CAAC,EAC7BA,IACIA,EAAW,OACXN,EAAW,GAAG,EACdQ,EAAM,QAAQ,aAAa,IAE3BA,EAAM,KAAK,kBAAkB,EACzB,QAAQ,kBAAkB,GAC1BR,EAAW,YAAY,GAGnC,CACH,CAAA,CACJ,CACL,EACD,CAACD,CAAQ,CAAC,EAGRU,EAAA,IAAAC,EAAA,CAAsB,KAAM,EACzB,gBAACC,EACG,CAAA,SAAA,CAAAF,EAAAA,IAAC,OAAI,SAAoB,sBAAA,CAAA,EACzBA,EAAAA,IAAC,OAAK,SAASV,CAAA,CAAA,CAAA,CAAA,CACnB,CACJ,CAAA,CAER"}