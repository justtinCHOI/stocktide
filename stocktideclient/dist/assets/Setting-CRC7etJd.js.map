{"version":3,"file":"Setting-CRC7etJd.js","sources":["../../src/components/my/setting/LanguageSelector.tsx","../../src/components/my/setting/SettingComponent.tsx","../../src/pages/my/setting/Setting.tsx"],"sourcesContent":["import { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { FC } from 'react';\n\nconst LanguageSelector: FC = () => {\n  const { i18n } = useTranslation();\n\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(lng).then();\n  };\n\n  return (\n    <Container>\n      <Button onClick={() => changeLanguage('ko')}>한국어</Button>\n      <Button onClick={() => changeLanguage('en')}>English</Button>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nconst Button = styled.button`\n  padding: 5px 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\nexport default LanguageSelector;","import { FC, useEffect, useState } from 'react';\r\nimport {getOne} from \"@api/companyApi\";\r\nimport useCustomMove from \"@hooks/useCustomMove\";\r\nimport LanguageSelector from '@components/my/setting/LanguageSelector';\r\n\r\nconst initState = {\r\n    tno: 0,\r\n    title: '',\r\n    writer: '',\r\n    dueDate: '',\r\n    complete: false\r\n};\r\n\r\nconst SettingComponent: FC<SettingProps> = ({tno}) => {\r\n    const [todo, setTodo] = useState(initState);\r\n    const {moveToList, moveToModify} = useCustomMove();\r\n\r\n    useEffect(() => {\r\n        getOne(tno).then(data => {\r\n            setTodo(data);\r\n        }).catch(err => {\r\n            console.error(\"Failed to fetch my article:\", err);\r\n            setTodo(initState); // 초기 상태로 설정\r\n        });\r\n    }, [tno]);\r\n\r\n    return (\r\n      <>\r\n          <LanguageSelector/>\r\n          <div className=\"border-2 border-sky-200 mt-10 m-2 p-4\">\r\n              {makeDiv('Tno', todo.tno)}\r\n              {makeDiv('Writer', todo.writer)}\r\n              {makeDiv('Title', todo.title)}\r\n              {makeDiv('Status', todo.complete ? 'Completed' : 'Not Yet')}\r\n              <div className=\"flex justify-end p-4\">\r\n                  <button type=\"button\"\r\n                          className=\"rounded p-4 m-2 text-xl w-32 text-white bg-blue-500\"\r\n                          onClick={() => moveToList()}>\r\n                      List\r\n                  </button>\r\n              </div>\r\n              <div className=\"flex justify-end p-4\">\r\n                  <button type=\"button\"\r\n                          className=\"rounded p-4 m-2 text-xl w-32 text-white bg-blue-500\"\r\n                          onClick={() => moveToModify(todo.tno)}>\r\n                      Modify\r\n                  </button>\r\n              </div>\r\n          </div>\r\n      </>\r\n\r\n    );\r\n}\r\n\r\nconst makeDiv = (title: string, value: any) => (\r\n  <div className=\"flex justify-center\">\r\n      <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">{title}</div>\r\n          <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">\r\n              {value}\r\n          </div>\r\n      </div>\r\n  </div>\r\n);\r\n\r\nexport default SettingComponent;\r\n","import {useParams} from \"react-router\";\r\nimport SettingComponent from '@components/my/setting/SettingComponent';\r\n\r\nfunction Setting() {\r\n\r\n    const {tno} = useParams()\r\n\r\n    return (\r\n        <div className=\"p-4 w-full bg-white  \">\r\n            <div className=\"text-3xl font-extrabold\">\r\n                Todo SettingPage {tno}\r\n            </div>\r\n            <SettingComponent tno={Number(tno)} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Setting;"],"names":["LanguageSelector","i18n","useTranslation","changeLanguage","lng","Container","jsx","Button","styled","initState","SettingComponent","tno","todo","setTodo","useState","moveToList","moveToModify","useCustomMove","useEffect","getOne","data","err","jsxs","Fragment","makeDiv","title","value","Setting","useParams"],"mappings":"6TAIA,MAAMA,EAAuB,IAAM,CAC3B,KAAA,CAAE,KAAAC,CAAK,EAAIC,EAAe,EAE1BC,EAAkBC,GAAgB,CACjCH,EAAA,eAAeG,CAAG,EAAE,KAAK,CAChC,EAEA,cACGC,EACC,CAAA,SAAA,CAAAC,MAACC,GAAO,QAAS,IAAMJ,EAAe,IAAI,EAAG,SAAG,MAAA,QAC/CI,EAAO,CAAA,QAAS,IAAMJ,EAAe,IAAI,EAAG,SAAO,SAAA,CAAA,CAAA,EACtD,CAEJ,EAEME,EAAYG,EAAO;AAAA;AAAA;AAAA,EAKnBD,EAASC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,ECnBhBC,EAAY,CACd,IAAK,EACL,MAAO,GACP,OAAQ,GACR,QAAS,GACT,SAAU,EACd,EAEMC,EAAqC,CAAC,CAAC,IAAAC,KAAS,CAClD,KAAM,CAACC,EAAMC,CAAO,EAAIC,EAAAA,SAASL,CAAS,EACpC,CAAC,WAAAM,EAAY,aAAAC,CAAY,EAAIC,EAAc,EAEjDC,OAAAA,EAAAA,UAAU,IAAM,CACLC,EAAAR,CAAG,EAAE,KAAaS,GAAA,CACrBP,EAAQO,CAAI,CAAA,CACf,EAAE,MAAaC,GAAA,CACJ,QAAA,MAAM,8BAA+BA,CAAG,EAChDR,EAAQJ,CAAS,CAAA,CACpB,CAAA,EACF,CAACE,CAAG,CAAC,EAIFW,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAjB,EAAA,IAACN,EAAgB,EAAA,EACjBsB,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACV,SAAA,CAAQE,EAAA,MAAOZ,EAAK,GAAG,EACvBY,EAAQ,SAAUZ,EAAK,MAAM,EAC7BY,EAAQ,QAASZ,EAAK,KAAK,EAC3BY,EAAQ,SAAUZ,EAAK,SAAW,YAAc,SAAS,EAC1DN,EAAAA,IAAC,MAAI,CAAA,UAAU,uBACX,SAAAA,EAAA,IAAC,SAAA,CAAO,KAAK,SACL,UAAU,sDACV,QAAS,IAAMS,EAAW,EAAG,SAAA,MAAA,CAAA,EAGzC,EACAT,EAAAA,IAAC,MAAI,CAAA,UAAU,uBACX,SAAAA,EAAA,IAAC,SAAA,CAAO,KAAK,SACL,UAAU,sDACV,QAAS,IAAMU,EAAaJ,EAAK,GAAG,EAAG,SAAA,QAAA,CAAA,CAGnD,CAAA,CAAA,CACJ,CAAA,CAAA,EACJ,CAGN,EAEMY,EAAU,CAACC,EAAeC,IAC9BpB,EAAAA,IAAC,MAAI,CAAA,UAAU,sBACX,SAAAgB,EAAA,KAAC,MAAI,CAAA,UAAU,oDACX,SAAA,CAAChB,EAAA,IAAA,MAAA,CAAI,UAAU,iCAAkC,SAAMmB,EAAA,EACtDnB,EAAA,IAAA,MAAA,CAAI,UAAU,oDACV,SACLoB,CAAA,CAAA,CAAA,CAAA,CACJ,CACJ,CAAA,EC3DF,SAASC,GAAU,CAET,KAAA,CAAC,IAAAhB,CAAG,EAAIiB,EAAU,EAGpB,OAAAN,EAAA,KAAC,MAAI,CAAA,UAAU,wBACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BAA0B,SAAA,CAAA,oBACnBX,CAAA,EACtB,EACCL,EAAAA,IAAAI,EAAA,CAAiB,IAAK,OAAOC,CAAG,CAAG,CAAA,CAAA,EACxC,CAER"}